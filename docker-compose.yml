version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: nexfit-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: nexfit_db
      POSTGRES_USER: nexfit_user
      POSTGRES_PASSWORD: nexfit123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres:/docker-entrypoint-initdb.d
    networks:
      - nexfit-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nexfit_user -d nexfit_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: nexfit-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nexfit-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  api:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: nexfit-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - nexfit-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  nexfit-network:
    driver: bridge